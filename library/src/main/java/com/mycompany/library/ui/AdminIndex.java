package com.mycompany.library.ui;

import com.mycompany.library.repository.AdminRepository;
import com.mycompany.library.repository.BookRepository;

import com.mycompany.library.model.Admin;
import com.mycompany.library.model.Book;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.table.TableColumn;
import javax.swing.JButton;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableCellEditor;
import javax.swing.AbstractCellEditor;
import java.awt.Component;
import javax.swing.JTable;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
public class AdminIndex extends javax.swing.JFrame {


    private DefaultTableModel tableModel;
//    private String userId;
    private String adminId;
    
    // 抓取userid
    AdminIndex(String adminId) {
//        this.userId = userId;
        this.adminId=adminId;
        initComponents();
        initializeUI();
        loadBooks();
    }
    
    private void initializeUI() {
        setTitle("管理員介面");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        tableModel = (DefaultTableModel) bookTable.getModel();
        jScrollPane1.setViewportView(bookTable);
        
        AdminRepository adminRepository = new AdminRepository();
        String name = adminRepository.findName(adminId);
        if (name != null) {
            jLabel2.setText("管理員：" + name+"你好");
        } else {
            jLabel2.setText("管理員：未知");
        }
        
        // Add buttons to the table
        TableColumn borrowColumn = bookTable.getColumn("借閱狀態");

        borrowColumn.setCellRenderer(new ButtonRenderer());//設置btn
        borrowColumn.setCellEditor(new ButtonEditor(new JCheckBox(), "借書"));

        //搜尋事件
        searchBtn.addActionListener(e -> {
            // 获取文本框中的输入内容
            String keyword = search.getText().trim();
            BookRepository bookRepository = new BookRepository();
            // 执行查询操作
            List<Book> searchResults = bookRepository.searchBooks(keyword);
            search.setText("");
            // 更新表格显示查询结果
            tableModel.setRowCount(0); // 清空表格
            populateTable(searchResults);
        });
        
//借閱按鈕
        jButton1.addActionListener((ActionEvent e) -> {
            SwingUtilities.invokeLater(() -> {
            new CheckUser(adminId).setVisible(true);
        });
        this.dispose(); // 关闭登录窗口
        });
        
//歸還按鈕
        jButton5.addActionListener((ActionEvent e) -> {
            SwingUtilities.invokeLater(() -> {
            new CheckReturn(adminId).setVisible(true);
        });
        this.dispose(); // 关闭登录窗口
        });
        
//罰金按鈕
        jButton2.addActionListener((ActionEvent e) -> {
            SwingUtilities.invokeLater(() -> {
            new CheckFineUI(adminId).setVisible(true);
        });
        this.dispose(); // 关闭登录窗口
        });
        
//新增書籍
        jButton3.addActionListener((ActionEvent e) -> {
            SwingUtilities.invokeLater(() -> {
            new AddBook(adminId).setVisible(true);
        });
        this.dispose(); // 关闭登录窗口
        });
        
//查看所有書籍
        jButton4.addActionListener((ActionEvent e) -> {
            BookRepository bookRepository = new BookRepository();
            List<Book> books = bookRepository.findAll();
            // 更新表格显示查询结果
            tableModel.setRowCount(0); // 清空表格
            populateTable(books);
        });
        
//註冊會員
        jButton7.addActionListener((ActionEvent e) -> {
            SwingUtilities.invokeLater(() -> {
            new register().setVisible(true);
        });
        });        
        
        
        //查看會員
        jButton6.addActionListener((ActionEvent e) -> {
            SwingUtilities.invokeLater(() -> {
            new AllUsers(adminId).setVisible(true);
        });
        this.dispose(); // 关闭登录窗口
        });
        
        
        //設定
        settingBtn.addActionListener((ActionEvent e) -> {
            openSettingFrame(adminId);
           
        });

        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        settingBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bookTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "書名", "作者", "ISBN", "借閱狀態"
            }
        ));
        bookTable.setName(""); // NOI18N
        jScrollPane1.setViewportView(bookTable);

        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        searchBtn.setText("搜尋");

        settingBtn.setText("設定");
        settingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingBtnActionPerformed(evt);
            }
        });

        jButton1.setText("借書");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("繳納罰金");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("新增書籍");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("查看館藏");

        jButton5.setText("還書");

        jButton6.setText("查看會員");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("會員註冊");

        jLabel2.setText("name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(settingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGap(65, 65, 65))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(settingBtn)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void settingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    
    // 列出書籍
    private void populateTable(List<Book> books) {
        for (Book book : books) {
            String buttonText = book.isBorrowed() ? "借出" : "館內";
            Object[] row = {book.getId(), book.getTitle(), book.getAuthor(), book.getIsbn(), buttonText}; // 將按鈕文本設置為空字符串
            tableModel.addRow(row);
        }
    }
    
    
    // 載入書籍
    private void loadBooks() {
        tableModel.setRowCount(0); // 清空表格
        
        // 創建一個 BookRepository 實例
        BookRepository bookRepository = new BookRepository();

        // 調用 findAll 方法獲取書籍列表
        List<Book> books = bookRepository.findAll();

        populateTable(books);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
       
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton settingBtn;
    // End of variables declaration//GEN-END:variables

    
    // 在表格中顯示"借書"按鈕
    private class ButtonRenderer extends JButton implements TableCellRenderer {
        public ButtonRenderer() {
            setOpaque(true);  // 設置按鈕為不透明
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "" : value.toString());
            boolean isBorrowed;
            isBorrowed = value != "借書";
            setEnabled(!isBorrowed);
            
            return this;
        }
    }

    // 按鈕點擊事件
    // AbstractCellEditor：提供单元格编辑器的默认实现。
    //TableCellEditor：用于定义如何编辑表格单元格。
    //ActionListener：用于处理按钮点击事件。
    private class ButtonEditor extends AbstractCellEditor implements TableCellEditor, ActionListener {
        private final String label;
        private final JButton button;
        private boolean isBorrowed;

        public ButtonEditor(JCheckBox checkBox, String label) {
            button = new JButton();
            button.setOpaque(true);
            button.addActionListener(this); // 監聽器
            this.label = label;
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            String buttonText = (String) value;
            isBorrowed = buttonText.equals("已借出"); // 根据按钮的文本值确定 isBorrowed 的状态
            button.setText(buttonText);
            button.setEnabled(!isBorrowed); // 设置按钮是否可点击
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            return label;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            fireEditingStopped();
            if (!button.isEnabled()) {
                // 如果按钮不可点击，不执行任何操作
                return;
            }
            if (label.equals("借書")) {
                // 获取当前行的书籍 ID
                Object bookId = bookTable.getModel().getValueAt(bookTable.getSelectedRow(), 0);
                // 呼叫 BookRepository 方法
                BookRepository bookRepository = new BookRepository();
                
                String keyword = search.getText().trim();
                if(keyword == null){
                    loadBooks();
                }
                else{
                    // 执行查询操作
                    List<Book> searchResults = bookRepository.searchBooks(keyword);

                    // 更新表格显示查询结果
                    tableModel.setRowCount(0); // 清空表格
                    populateTable(searchResults);
                }
                
            }
        }
    }
    
//    // 跳至borrowedList.java
//    private void openBorrowFrame(String userId) {
//        SwingUtilities.invokeLater(() -> {
//            new borrowedList(userId).setVisible(true);
//        });
//        this.dispose(); // 关闭登录窗口
//    }
    
    
    // 跳至設定
    private void openSettingFrame(String adminId) {
        SwingUtilities.invokeLater(() -> {
            new AdminSetting(adminId).setVisible(true);
        });
        this.dispose(); // 关闭登录窗口
    }
    
}
