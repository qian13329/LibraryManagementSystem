package com.mycompany.library.ui;

import com.mycompany.library.repository.BookRepository;
import com.mycompany.library.repository.UserRepository;

import com.mycompany.library.model.Book;
import com.mycompany.library.model.User;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.table.TableColumn;
import javax.swing.JButton;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableCellEditor;
import javax.swing.AbstractCellEditor;
import java.awt.Component;
import javax.swing.JTable;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
public class index extends javax.swing.JFrame {


    private DefaultTableModel tableModel;
    private String userId;
    
    // 抓取userid
    index(String userId) {
        this.userId = userId;
        initComponents();
        initializeUI();
        loadBooks();
    }
    
    private void initializeUI() {
        setTitle("圖書列表");
        setSize(750, 450);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        tableModel = (DefaultTableModel) bookTable.getModel();
        jScrollPane1.setViewportView(bookTable);
        
        // 设置第x列的宽度
        TableColumn column0 = bookTable.getColumnModel().getColumn(0);
        column0.setPreferredWidth(30);
        TableColumn column3 = bookTable.getColumnModel().getColumn(3);
        column3.setPreferredWidth(30);
        TableColumn column4 = bookTable.getColumnModel().getColumn(4);
        column4.setPreferredWidth(50);
        TableColumn column5 = bookTable.getColumnModel().getColumn(5);
        column5.setPreferredWidth(30);

        UserRepository userRepository = new UserRepository();
        String name = userRepository.findName(userId);
        if (name != null) {
            jLabel1.setText("圖書館會員：" + name+"你好");
        } else {
            jLabel1.setText("圖書館會員：未知");
        }
        
        // Add buttons to the table
        TableColumn borrowColumn = bookTable.getColumn("借閱狀態");

        borrowColumn.setCellRenderer(new index.ButtonRenderer());
        borrowColumn.setCellEditor(new index.ButtonEditor(new JCheckBox(), "借書"));

        // 按鈕觸發搜尋事件
        searchBtn.addActionListener(e -> {
            // 获取文本框中的输入内容
            String keyword = search.getText().trim();

            BookRepository bookRepository = new BookRepository();
            // 执行查询操作
            List<Book> searchResults = bookRepository.searchBooks(keyword);

            // 更新表格显示查询结果
            tableModel.setRowCount(0); // 清空表格
            populateTable(searchResults);
        });
        
        
        searchBorrowBtn.addActionListener((ActionEvent e) -> {
            openBorrowFrame(userId);
        });
        
        settingBtn.addActionListener((ActionEvent e) -> {
            openSettingFrame(userId);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        settingBtn = new javax.swing.JButton();
        searchBorrowBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bookTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "書名", "作者", "ISBN", "類型", "借閱狀態"
            }
        ));
        bookTable.setName(""); // NOI18N
        jScrollPane1.setViewportView(bookTable);

        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        searchBtn.setText("搜尋");

        settingBtn.setText("設定");
        settingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingBtnActionPerformed(evt);
            }
        });

        searchBorrowBtn.setText("查詢借閱紀錄");
        searchBorrowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBorrowBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(searchBorrowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(settingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel1)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBorrowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void settingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingBtnActionPerformed

    private void searchBorrowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBorrowBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBorrowBtnActionPerformed

    
    // 列出書籍
    private void populateTable(List<Book> books) {
        for (Book book : books) {
            String buttonText = book.isBorrowed() ? "已借出" : "借書";
            Object[] row = {book.getId(), book.getTitle(), book.getAuthor(), book.getIsbn(), book.getSubject(), buttonText}; // 將按鈕文本設置為空字符串
            tableModel.addRow(row);
        }
    }
    
    
    // 載入書籍
    private void loadBooks() {
        tableModel.setRowCount(0); // 清空表格
        
        // 創建一個 BookRepository 實例
        BookRepository bookRepository = new BookRepository();

        // 調用 findAll 方法獲取書籍列表
        List<Book> books = bookRepository.findAll();

        populateTable(books);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // main 方法将不会被使用，因为我们直接从 Login 跳转到 Index
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchBorrowBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton settingBtn;
    // End of variables declaration//GEN-END:variables

    
    // 在表格中顯示"借書"按鈕
    private class ButtonRenderer extends JButton implements TableCellRenderer {
        public ButtonRenderer() {
            setOpaque(true);  // 設置按鈕為不透明
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "" : value.toString());
            boolean isBorrowed;
            isBorrowed = value != "借書";
            setEnabled(!isBorrowed);
            return this;
        }
    }

    // 按鈕點擊事件
    // AbstractCellEditor：提供单元格编辑器的默认实现。
    //TableCellEditor：用于定义如何编辑表格单元格。
    //ActionListener：用于处理按钮点击事件。
    private class ButtonEditor extends AbstractCellEditor implements TableCellEditor, ActionListener {
        private final String label;
        private final JButton button;
        private boolean isBorrowed;

        public ButtonEditor(JCheckBox checkBox, String label) {
            button = new JButton();
            button.setOpaque(true);
            button.addActionListener(this); // 監聽器
            this.label = label;
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            String buttonText = (String) value;
            isBorrowed = buttonText.equals("已借出"); // 根据按钮的文本值确定 isBorrowed 的状态
            button.setText(buttonText);
            button.setEnabled(!isBorrowed); // 设置按钮是否可点击
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            return label;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            fireEditingStopped();
            if (!button.isEnabled()) {
                // 如果按钮不可点击，不执行任何操作
                return;
            }
            if (label.equals("借書")) {
                // 获取当前行的书籍 ID
                Object bookId = bookTable.getModel().getValueAt(bookTable.getSelectedRow(), 0);
                // 呼叫 BookRepository 方法
                BookRepository bookRepository = new BookRepository();
                bookRepository.borrowBook((Long) bookId, (String) userId);
                
                String keyword = search.getText().trim();
                if(keyword == null){
                    loadBooks();
                }
                else{
                    // 执行查询操作
                    List<Book> searchResults = bookRepository.searchBooks(keyword);

                    // 更新表格显示查询结果
                    tableModel.setRowCount(0); // 清空表格
                    populateTable(searchResults);
                }
                
            }
        }
    }
    
    // 跳至borrowedList.java
    private void openBorrowFrame(String userId) {
        SwingUtilities.invokeLater(() -> {
            new borrowedList(userId).setVisible(true);
        });
        this.dispose(); // 关闭登录窗口
    }
    
    
    // 跳至setting.java
    private void openSettingFrame(String userId) {
        SwingUtilities.invokeLater(() -> {
            new setting(userId).setVisible(true);
        });
        this.dispose(); // 关闭登录窗口
    }
    
}
